In JavaScript, the spread operator (`...`) allows you to expand or spread elements of an array or object into another array or object. When working with nested arrays, the spread operator only spreads the outer array unless you use it recursively to spread inner arrays.

Here's an example of how the spread operator works with nested arrays:

### Example 1: Using the spread operator with a nested array:
```javascript
const nestedArray = [1, [2, 3], [4, 5]];

const flatArray = [...nestedArray]; 
console.log(flatArray); 
// Output: [1, [2, 3], [4, 5]] (Outer array is spread, but inner arrays remain nested)
```

In this example, the inner arrays remain nested.

### Example 2: Spreading the inner arrays:
If you want to "flatten" the nested array (i.e., spread inner arrays as well), you can use the spread operator inside a loop or `Array.prototype.flat()`:

#### Option 1: Using the spread operator manually:
```javascript
const nestedArray = [1, [2, 3], [4, 5]];

const flattenedArray = [nestedArray[0], ...nestedArray[1], ...nestedArray[2]];
console.log(flattenedArray);
// Output: [1, 2, 3, 4, 5] (Flattening the array manually)
```

#### Option 2: Using `Array.prototype.flat()`:
A cleaner approach for flattening nested arrays is to use the `flat()` method:

```javascript
const nestedArray = [1, [2, 3], [4, 5]];

const flatArray = nestedArray.flat(); 
console.log(flatArray); 
// Output: [1, 2, 3, 4, 5] (Flattening the array automatically)
```

### Example 3: Flattening deeply nested arrays:
If your array has multiple levels of nesting, you can provide a depth to `flat()`, or recursively spread inner arrays.

```javascript
const deeplyNestedArray = [1, [2, [3, 4], 5], [6, 7]];

const flatArray = deeplyNestedArray.flat(2); // 2 is the depth of flattening
console.log(flatArray);
// Output: [1, 2, 3, 4, 5, 6, 7]
```

This will flatten the array two levels deep.

### Conclusion:
- Use the spread operator (`...`) to spread outer arrays.
- To flatten nested arrays, you can either manually spread the inner arrays or use the `flat()` method for a more automated approach.